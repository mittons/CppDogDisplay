# Code powered by OpenAI, Specifically ChatGPT-4.
# The following is derived directly from human generated bash code.
# Translated from bash to Dockerfile, by ChatGPT. 
# 	- Comments generated by AI. Some additional code generated by AI beyond human Input.
#   - Some code sections suggested by AI were not fit for purpose, nor was the code as whole fit for purpose.
#		(Although majority of it was).
#	- As a result:
#		- Code sections that were not fit for purpose have been modified or removed by human decision making.
#		- Sections that were required to make the code as a whole, fit for purpose, have been added by human 
#			decision making.

# Use the latest Ubuntu image as the base
FROM ubuntu:latest as base
WORKDIR /app
EXPOSE 7778

# Avoid prompts from apt
ARG DEBIAN_FRONTEND=noninteractive

# Update apt repository and install necessary packages
RUN apt-get update && \
    apt-get install -y python3 python3-pip && \
    pip3 install cryptography requests && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Use the latest Ubuntu image as the base
FROM ubuntu:latest as build
WORKDIR /app

# Avoid prompts from apt
ARG DEBIAN_FRONTEND=noninteractive

# Update apt repository and install necessary packages
RUN apt-get update && \
    apt-get install -y python3 python3-pip cmake && \
    pip3 install conan && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up Conan
RUN conan profile detect

# Copy your source code into the Docker image
COPY . /app

# Set the working directory
WORKDIR /app

# Install dependencies using Conan
RUN conan install . --build=missing

# Configure and build the application
RUN cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DPRODUCTION=ON -DBUILD_TESTS=OFF && \
    cmake --build ./build --config Release

# Switch to final image
FROM base AS final
WORKDIR /app

# Copy from build image
COPY --from=build /app/build/src .
ENTRYPOINT ["./DogDisplayForCpp"]